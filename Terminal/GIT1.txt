JSON
4. Создать внешний репозиторий c названием JSON. 

 5. Клонировать репозиторий JSON на локальный компьютер. / 
git clone https://github.com/ivanushkind/JSON.git

 6. Внутри локального JSON создать файл “new.json”. / 
touch JSON/new.json 
 
7. Добавить файл под гит. / 
cd JSON
git add new.json

8. Закоммитить файл. / 
git commit -m "commit" 

9. Отправить файл на внешний GitHub репозиторий. /
git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. / 
vim new.json
Нажал "I"
{
   "firstname": "Danylo",
   "lastname": "Ivanushkin",
   "numberofpets": 1,
   "desiredSalary": "600$"
}
ESC
shift+:
wq
enter
 
11. Отправить изменения на внешний репозиторий. 
git add new.json
git commit -m "info about me"
git push
 
12. Создать файл preferences.json - 
touch preferences.json
 
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. 
- в 12 пункте сделал через "cat" 
vim preferences.json 
Нажал "I"
{
   "Film": "The Game",
   "tvseries": "The Wire",
   "food": "Borsch",
   "season": "Spring"
}
ESC
shift+:
wq
enter

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - 
cat > skils.json
 {
      "Skills": [
        "Terminal",
        "Postman",
        "JavaScript",
        "GitHub"
      ]
 }      
ctrl+c
 
15. Отправить сразу 2 файла на внешний репозиторий. 
git add preferences.json skils.json 
git commit -m "pref json" 
git push
 
16. На веб интерфейсе создать файл bug_report.json.
Add fileCreate new file
bug_report.json
commit new file
 
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - 
заходим в редактирование файла, 
что-то пишем, 
жмем Commit changes
 
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. заходим в редактирование файла, что-то пишем, жмем Commit changes
Нажимаем на файл
*

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
*
 
20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
21. Создать внешний репозиторий c названием XML.
есть
 
22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/ivanushkind/XML.git
 
23. Внутри локального XML создать файл “new.xml”. 
touch XML/new.xml
 
24. Добавить файл под гит. 
cd XML 
git add new.xml

 25. Закоммитить файл. 
git commit -m "1"
 
26. Отправить файл на внешний GitHub репозиторий. - 
git push
 
27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - через vim
vim new.xml
Нажал "I"
<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <firstname>Danylo</firstname>
    <lastname>Ivanushkin</lastname>
    <numberofpets>1</numberofpets>
    <desiredSalary>600$</desiredSalary>
</root>
ESC
shift+:
wq
enter
 
28. Отправить изменения на внешний репозиторий. 
git add new.xml
git commit -m "2" 
git push
 
29. Создать файл preferences.xml 
touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
cat >> preferences.xml
<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <Film>The Game</Film>
    <tvseries>The Wire</tvseries>
    <food>Borsch</food>
    <season>Spring</season>
</root>
ctrl+c
 
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - 
cat > skills.xml
<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <Skills>Terminal</Skills>
    <Skills>Postman</Skills>
    <Skills>JavaScript</Skills>
    <Skills>GitHub</Skills>
</root>
ctrl+c
 
32. Сделать коммит в одну строку. 
git add skills.xml preferences.xml 
git commint -m "skills pref"
 
33. Отправить сразу 2 файла на внешний репозиторий.
git push

34. На веб интерфейсе создать файл bug_report.xml. 
add file > create new file 

35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  
нажимаешь на файл, заходишь в редактирование, вносишь данные, жмешь на кнопку "Commit changes"

36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. +

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

38. Синхронизировать внешний и локальный репозиторий XML - 
git pull
